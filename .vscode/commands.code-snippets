{
	// Place your Discord-Music-Master workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"discord-command": {
		"prefix": "discord-command",
		"body": [
			"import {",
			"\tChatInputCommandInteraction,",
			"\tCacheType,",
			"\tSlashCommandBuilder,",
			"} from 'discord.js';",
			"import PlayManager from '../core/PlayManager';",
			"import { Command } from './abstract/command.abstract';",
			"",
			"class ${1:CommandName} extends Command {",
			"\t_data: any;",
			"",
			"\tconstructor() {",
			"\t\tsuper();",
			"\t\tthis._data = new SlashCommandBuilder()",
			"\t\t\t.setName('${2:commandName}')",
			"\t\t\t.setDescription('${3:description}')",
			"\t\t\t.addStringOption((option) =>",
			"\t\t\t\toption",
			"\t\t\t\t\t.setName('${4:firstOptionName}')",
			"\t\t\t\t\t.setDescription('${5:firstOptionDescription}')",
			"\t\t\t\t\t.setRequired(true),",
			"\t\t\t)",
			"\t\t\t.addStringOption((option) =>",
			"\t\t\t\toption",
			"\t\t\t\t\t.setName('${6:secondOptionName}')",
			"\t\t\t\t\t.setDescription('${7:secondOptionDescription}')",
			"\t\t\t\t\t.setRequired(true),",
			"\t\t\t);",
			"\t}",
			"",
			"\tasync execute(",
			"\t\tinteraction: ChatInputCommandInteraction<CacheType>,",
			"\t): Promise<void> {",
			"\t\tconst connectionState = PlayManager.getConnectionState(",
			"\t\t\tinteraction.guildId!,",
			"\t\t);",
			"",
			"\t\treturn;",
			"\t}",
			"}",
			"",
			"export default ${1:CommandName};"
		],
		"description": "Generate Discord command file with Discord.js and SlashCommandBuilder."
	}
	
}
